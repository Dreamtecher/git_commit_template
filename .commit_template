<type>(<scope>) : <subject>

<body>

<footer>


#     例子 :    feat(location): 接入登录API
#                  
#                  登录功能与服务器对接
#

#其中 type 的值可以有
#    .feat :新功能 
#    .fix :修复bug
#    .doc :仅改变文档或启动脚本等非代码功能
#    .style :仅改变代码格式
#    .refactor :某个已有功能重构，不改变原有功能
#    .perf :性能优化
#    .test :增加测试
#    .build :改变了build工具 如 grunt换成了 npm
#
#scope :用来说明此次修改的影响范围
#     .all :表示影响面大 ，如修改了网络框架  会对真个程序产生影响
#     .loation :表示影响小，某个小小的功能
#     .module :表示会影响某个模块 如登录模块、首页模块 、用户管理模块等等
#
#subject: commit 目的的简短描述，不超过50个字符。
# 
#body :Body 部分是对本次 commit 的详细描述，可以分成多行。此处应该说明代码变动的动机，以及与以前行为的对比。
# 
#footer :
#只用于两种情况。
#(1) 不兼容变动
#如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。
#(2) 关闭 Issue
#如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。
#Closes #234
#也可以一次关闭多个 issue。
#Closes #123, #245, #992
